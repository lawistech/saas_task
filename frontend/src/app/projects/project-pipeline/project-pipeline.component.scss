// Assumes global SCSS variables are available
// @import '../../../styles.scss';

.pipeline-view-wrapper { // Renamed from .pipeline-container
  display: flex;
  flex-direction: column;
  // Removed height: 100%, assuming parent or global styles manage view height
  padding: 1.5rem; // Added padding for the overall view
  gap: 1.5rem; // Space between title and board
}

// H1 is styled globally, removed .pipeline-title

.pipeline-board-scroll-container { // New wrapper for scroll
  flex-grow: 1; // Allow this to take available height
  overflow-x: auto; // Horizontal scroll for the board content
  overflow-y: hidden; // Prevent vertical scroll on this container
  padding-bottom: 1rem; // Space for scrollbar if needed
}

.pipeline-board-content { // Renamed from .pipeline-board
  display: flex;
  gap: 1.5rem; // Consistent gap between stages
  // Removed height, min-height. Height will be determined by content or parent flex.
  // align-items: stretch; // If stages should be same height
}

.pipeline-stage { // Renamed from .pipeline-column
  flex: 0 0 300px; // Fixed width for stages (0 flex-shrink, 0 flex-grow, base width 300px)
  // min-width: 280px; // Replaced by flex-basis
  // max-width: 350px; // Replaced by flex-basis
  background-color: lighten($subtle-borders, 7.5%); // Very light gray
  border: 1px solid $subtle-borders;
  border-radius: 0.25rem; // Standard border radius
  display: flex;
  flex-direction: column;
  overflow: hidden; // Prevent content spill
  box-shadow: none; // Remove shadow

  // Remove status-specific border-top and header background for minimalism
  // &.stage-active, &.stage-on-hold, etc. { border-top: none; .stage-header { background-color: transparent; }}
}

.stage-header { // Renamed from .column-header
  padding: 1rem 1.25rem; // Consistent padding
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid $subtle-borders; // Use variable

  h2 {
    margin: 0;
    font-size: 1.1rem; // Consistent with other panel/section headers
    font-weight: 500; // Standard weight
    // Global H2 styles are larger, this is more like an H4/H5
  }

  .stage-project-count { // Renamed from .project-count
    background-color: $subtle-borders;
    color: $secondary-text;
    border-radius: 0.75rem; // Pill shape
    padding: 0.1em 0.5em; // Small padding
    font-size: 0.75rem; // Small font size
    font-weight: 500;
  }
}

.stage-cards-list { // Renamed from .project-cards
  padding: 1rem; // Padding around the list of cards
  overflow-y: auto; // Allow vertical scroll for cards within a stage
  flex: 1; // Allow card list to take available space in stage
  display: flex;
  flex-direction: column;
  gap: 1rem; // Consistent gap between cards
  min-height: 100px; // Ensure drop zone is available even if empty
}

.kanban-card { // Renamed from .project-card
  background-color: $background;
  border: 1px solid $subtle-borders;
  border-radius: 0.25rem;
  box-shadow: none; // Remove shadow
  padding: 1rem; // Consistent padding
  cursor: grab; // Indicate draggable
  transition: border-color 0.2s ease-in-out; // Subtle hover effect

  &:hover {
    border-color: darken($subtle-borders, 15%);
    // transform: none; // Remove translateY
    // box-shadow: none; // Ensure no shadow on hover
  }

  &:active, &.cdk-drag-preview { // Styling for card being dragged
    cursor: grabbing;
    border-color: $primary-text; // Highlight while dragging
    box-shadow: 0 2px 5px rgba($primary-text, 0.1); // Subtle shadow when lifted
  }
}

.card-header { // Was .project-header (within card)
  display: flex;
  justify-content: space-between;
  align-items: flex-start; // Align title and actions
  margin-bottom: 0.75rem;

  .card-title { // Was .project-title, now an H3
    // Global H3 styles apply (font-size, weight)
    margin: 0; // Remove default H3 margin
    word-break: break-word; // Prevent long titles from breaking layout
    cursor: pointer;
    color: $primary-text; // Ensure it uses primary text color

    &:hover {
      color: darken($primary-text, 15%); // Standard link hover
      text-decoration: underline;
    }
  }

  .card-actions {
    display: flex;
    gap: 0.25rem; // Small gap between icon buttons
    // .btn.btn-icon styles applied from HTML
  }
}

.card-meta-details { // Was .project-details
  margin-bottom: 0.75rem;
  font-size: 0.875rem; // Consistent small font size for meta

  .meta-item { // Was .detail-item
    display: flex;
    // justify-content: space-between; // Can cause unevenness if values vary a lot
    gap: 0.5rem; // Space between label and value
    margin-bottom: 0.25rem; // Small margin between meta items

    .meta-label { // Was .detail-label
      color: $secondary-text;
      font-weight: 400; // Normal weight
      flex-shrink: 0; // Prevent label from shrinking
    }

    .meta-value { // Was .detail-value
      color: $primary-text;
      font-weight: 500; // Slightly bolder value
      word-break: break-all; // Break long unbroken strings
    }
  }
}

.card-description { // Was .project-description
  font-size: 0.875rem;
  color: $secondary-text;
  margin-top: 0.75rem;
  border-top: 1px solid $subtle-borders; // Use variable
  padding-top: 0.75rem;
  // Line clamping preserved from original
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}

.empty-stage-message { // Was .empty-column-message
  color: $secondary-text; // Use variable
  font-size: 0.875rem; // Consistent small font size
  text-align: center;
  padding: 1rem 0;
  font-style: italic;
}

// CDK Drag and Drop specific styles
.cdk-drag-placeholder { // Style for the placeholder element when dragging
  opacity: 0.3;
  border: 2px dashed $subtle-borders;
  background-color: lighten($subtle-borders, 7%);
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  // Ensure it takes up same space as card
  .kanban-card { // Hide actual card content in placeholder
    opacity: 0;
  }
}

.cdk-drop-list-dragging .kanban-card:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}